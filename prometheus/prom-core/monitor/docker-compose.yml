# from https://github.com/brandonleegit/OpenSourceMonitoring/blob/main/docker-compose.yml

version: "3.8"

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}

services:
  # ============================= #
  #  Container for Node-Exporter  #
  # ============================= #
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/hots/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  # ========================== #
  #  Container for Prometheus  #
  # ========================== #
  prometheus:
    image: prom/prometheus:latest
    user: "106655"   # Permission Issue when creating data inside the container from the mounted directory
    environment:
      - PUID=106655
      - PGID=106655
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ~/monitor/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ~/monitor/prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring

  # ======================= #
  #  Container for Grafana  #
  # ======================= #
  grafana:
    image: grafana/grafana:latest
    user: "106655"
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ~/monitor/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ~/monitor/grafana:/var/lib/grafana
    networks:
      - monitoring

  # ======================== #
  #  Container for cAdvisor  #
  # ======================== #
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8081:8080"   # Nest Application is already running on 8080
    networks:
      - monitoring
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis   # cAdvisor depends on redis

  # ===================== #
  #  Container for Redis  #
  # ===================== #
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - monitoring


